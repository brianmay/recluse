#!/bin/bash

CONFIG=/usr/local/recluse/config
[ -r "$CONFIG" ] || echo "Can't source $CONFIG"
[ -r "$CONFIG" ] || exit 0
source $CONFIG

if [ -d /usr/local/recluse/$distro/$distroversion/kernel.${KERNELTYPE} ]
then
        KERNELDIR="/usr/local/recluse/$distro/$distroversion/kernel.${KERNELTYPE}"
else
        KERNELDIR="/usr/local/recluse/$distro/$distroversion/kernel"
fi

mostrecent=$(rpm -qp $KERNELDIR/latest/*.rpm --queryformat="%{version}-%{release}\n")
running=$(rpm -qf /boot/config-$(uname -r) --queryformat="%{version}-%{release}\n")
busy=$(/usr/local/recluse/scripts/bin/whatson -s | wc -l)

version_checker() {
        local ver1=$1
        while [ `echo $ver1 | egrep -c [^0123456789.]` -gt 0 ]; do
                char=`echo $ver1 | sed 's/.*\([^0123456789.]\).*/\1/'`
                char_dec=`echo -n "$char" | od -b | head -1 | awk {'print $2'}`
                ver1=`echo $ver1 | sed "s/$char/.$char_dec/g"`
        done
        local ver2=$2
        while [ `echo $ver2 | egrep -c [^0123456789.]` -gt 0 ]; do
                char=`echo $ver2 | sed 's/.*\([^0123456789.]\).*/\1/'`
                char_dec=`echo -n "$char" | od -b | head -1 | awk {'print $2'}`
                ver2=`echo $ver2 | sed "s/$char/.$char_dec/g"`
        done

        ver1=`echo $ver1 | sed 's/\.\./.0/g'`
        ver2=`echo $ver2 | sed 's/\.\./.0/g'`

        do_version_check "$ver1" "$ver2"
}

do_version_check() {

        [ "$1" == "$2" ] && return 10

        ver1front=`echo $1 | cut -d "." -f -1`
        ver1back=`echo $1 | cut -d "." -f 2-`
        ver2front=`echo $2 | cut -d "." -f -1`
        ver2back=`echo $2 | cut -d "." -f 2-`

        if [ "$ver1front" != "$1" ] || [ "$ver2front" != "$2" ]; then
                [ "$ver1front" -gt "$ver2front" ] && return 11
                [ "$ver1front" -lt "$ver2front" ] && return 9

                [ "$ver1front" == "$1" ] || [ -z "$ver1back" ] && ver1back=0
                [ "$ver2front" == "$2" ] || [ -z "$ver2back" ] && ver2back=0
                do_version_check "$ver1back" "$ver2back"
                return $?
        else
                [ "$1" -gt "$2" ] && return 11 || return 9
        fi
}


if [ "$running" != "$mostrecent" ]
then
	if [ $busy -eq 0 -a ! -e /usr/local/recluse/nodestatus/forcestatus/$(hostname)-kernel ]
	then
		# first check if we're actually running a newer kernel
		version_checker "$mostrecent" "$running"
		if [ $? -eq 11 ]
		then
			echo "ERROR Running older kernel and free for reboot"
			exit 1
		fi
	fi
fi
