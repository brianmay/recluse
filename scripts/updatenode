#!/bin/bash

# updatenode - using rsync to do cfmupdatenode

# Written by Brett Pemberton, brett@vpac.org
# Copyright (C) 2007 Victorian Partnership for Advanced Computing

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# NOTE! --- must keep trailing slash
root=/usr/local/recluse/root/
root_head=/usr/local/recluse/root_head/

opts="-aK --exclude=.svn"

hostname=$(hostname | sed -e 's/\..*//')
cluster=$(echo $hostname | sed -e 's/[0-9][0-9][0-9]//' -e 's/-m$//')

if [ "$hostname" == "${cluster}-m" ]
then
	echo "Do not run on management node"
	exit
fi

if [ x"$1" != x"-s" ]
then
	opts="-v $opts"
fi

# if we get an argument to the script, it will either be "head" or "compute"
# as forced in the ks.cfg (due to hostname not being set properly at that time)
# if not, then we deduce if we're on the head node
# if so, sync to the head node tree after the compute node tree

if [ x"$1" == x"compute" ]
then
	mode=compute
elif [ x"$1" == x"head" ]
then
	mode=head
elif [ "$hostname" == "$cluster" ]
then
	mode=head
else
	mode=compute
fi

rsync ${opts} $root /

if [ "$mode" == "head" ]
then
	rsync ${opts} $root_head /
fi

ldconfig
touch /etc/authuser
